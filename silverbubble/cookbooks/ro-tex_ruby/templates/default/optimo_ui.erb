#!/bin/bash
### BEGIN INIT INFO
# Provides:          APPLICATION
# Required-Start:    $all
# Required-Stop:     $network $local_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start the APPLICATION unicorns at boot
# Description:       Enable APPLICATION at boot time.
### END INIT INFO

# Use this as a basis for your own Unicorn init script.
# Change APPLICATION to match your app.
# Make sure that all paths are correct.

# Instructions
# Place this file to /etc/init.d/APP_NAME
# * Note that /etc/init.d/ is the upstart directory

# Add executable attribute to the script
# sudo chmod +x /etc/init.d/APP_NAME

# Update the System init link
# sudo update-rc.d APP_NAME defaults

# Settings
# Set APP_NAME to be your application name (optimo_ui)
# Set PID path to be the same as defined in APP_ROOT/config/unicorn.rb
# Set GEM_HOME to be the home directory of your Gem
# * Get GEM_HOME by using `gem environment`
# Set all additional parameters that you want to run with unicorn in UNICORN_OPTS
# Set user name (after 'su') to be the rails app running user (optimo)

set -u
set -e
 
# Change these to match your app:
APP_NAME="optimo_ui"
APP_ROOT="/opt/Source/optimo_ui"
PID="/tmp/unicorn.optimo_ui.pid"
ENV=production
USER=ivo
 
GEM_HOME="/home/ivo/.rvm/gems/ruby-<%= node['ro-tex_ruby']['ruby_version'] %>"
 
UNICORN_OPTS="-E $ENV -D -p 3000 -c $APP_ROOT/config/unicorn.rb"
 
SET_PATH="cd $APP_ROOT; rvm use <%= node['ro-tex_ruby']['ruby_version'] %>; export GEM_HOME=$GEM_HOME"
CMD="$SET_PATH; $GEM_HOME/bin/unicorn $UNICORN_OPTS"
 
old_pid="$PID.oldbin"
 
cd $APP_ROOT || exit 1

sig () {
	test -s "$PID" && kill -$1 `cat $PID`
}
 
oldsig () {
	test -s $old_pid && kill -$1 `cat $old_pid`
}
 
case ${1-help} in
start)
	sig 0 && echo >&2 "Already running" && exit 0
	su - "$USER" -c "$CMD"
	;;
stop)
	sig QUIT && exit 0
	echo >&2 "Not running"
	;;
force-stop)
	sig TERM && exit 0
	echo >&2 "Not running"
	;;
restart|reload)
	sig HUP && echo reloaded OK && exit 0
	echo >&2 "Couldn't reload, starting '$CMD' instead"
	su - "$USER" -c "$CMD"
	;;
upgrade)
	sig USR2 && exit 0
	echo >&2 "Couldn't upgrade, starting '$CMD' instead"
	su - "$USER" -c "$CMD"
	;;
rotate)
	sig USR1 && echo rotated logs OK && exit 0
	echo >&2 "Couldn't rotate logs" && exit 1
	;;
*)
 	echo >&2 "Usage: $0 <start|stop|restart|upgrade|rotate|force-stop>"
 	exit 1
 	;;
esac

